#https://mindsers.blog/post/https-using-nginx-certbot-docker/
server {
    listen 80;
    listen [::]:80;

    server_name jibberjabber.rellum.com.ar;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
            return 301 https://jibberjabber.rellum.com.ar$request_uri;
        }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;
    
    server_name jibberjabber.rellum.com.ar;

    ssl_certificate /etc/nginx/ssl/live/jibberjabber.rellum.com.ar/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/jibberjabber.rellum.com.ar/privkey.pem;
    

    location / {
        root /usr/share/nginx/html;
    }

    location /post/ {
      proxy_pass http://posts-service:8081/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

    location /followers/ {
      proxy_pass http://followers-service:8083/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }
  

    location /auth/ {
      proxy_pass http://keycloak-service:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

    location /admin/* {
      proxy_pass http://keycloak-service:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

}