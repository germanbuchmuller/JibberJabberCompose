server {
    listen 80;
    listen [::]:80;

    server_name jibberjabber.rellum.com.ar;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://jibberjabber.rellum.com.ar$request_uri;
    }
}

server {

    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name jibberjabber.rellum.com.ar;

    ssl_certificate /etc/letsencrypt/live/jibberjabber.rellum.com.ar/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/jibberjabber.rellum.com.ar/privkey.pem;

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    add_header Host $host; # to forward the original host requested by the client

    location / {
        proxy_pass http://ui:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

    location /post/ {
      proxy_pass http://posts-service:8081/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

    location /followers/ {
      proxy_pass http://followers-service:8083/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }


    # location /auth/ {
    #   proxy_pass http://keycloak-service:8080/;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
    #   proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    # }

    # location /admin/ {
    #   proxy_pass http://keycloak-service:8080/admin/;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
    #   proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    # }

   location /auth/ {
      proxy_pass http://keycloak-service:8080/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

   location /admin/ {
      proxy_pass http://keycloak-service:8080/admin/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

    location /realms/ {
      proxy_pass http://keycloak-service:8080/realms/;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }

    location /keycloak-db/ {
      proxy_pass http://keycloak-db-service:5432;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme; # To forward the original protocol HTTP or HTTPS
      proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
    }


}
